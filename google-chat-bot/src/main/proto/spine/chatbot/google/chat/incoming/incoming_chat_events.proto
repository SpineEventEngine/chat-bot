/*
 * Copyright 2020, TeamDev. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

syntax = "proto3";

package spine.chatbot.google.chat.incoming;

import "spine/options.proto";

option (type_url_prefix) = "type.spine.io.chatbot";
option java_package = "io.spine.chatbot.google.chat.incoming.event";
option java_outer_classname = "IncomingChatEventsProto";
option java_multiple_files = true;
option java_generate_equals_and_hash = true;

import "spine/chatbot/google/chat/identifiers.proto";
import "spine/chatbot/google/chat/incoming/incoming_chat_messages.proto";

// A new event received from the Chat.
message ChatEventReceived {

    // The received event.
    ChatEvent event = 1 [(required) = true];
}

// The ChatBot is added to a Chat space.
message BotAddedToSpace {

    // The ID of the Space to which the ChatBot is added.
    SpaceId space = 1 [(required) = true];

    // The actual chat event message.
    ChatEvent event = 2 [(required) = true];
}

// The ChatBot is removed from the Chat space.
message BotRemovedFromSpace {

    // The ID of the Space from which the ChatBot is removed.
    SpaceId space = 1 [(required) = true];

    // The actual chat event message.
    ChatEvent event = 2 [(required) = true];
}

// The ChatBot received a new incoming Chat message.
message MessageReceived {

    // The ID of the new message.
    MessageId message = 1 [(required) = true];

    // The actual chat event message.
    ChatEvent event = 2 [(required) = true];
}
